services:
  postgres:
    image: postgres:16
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./services/init-db:/docker-entrypoint-initdb.d
    networks:
      - app-net

  # auth-service:
  #   build:
  #     context: ./services/auth/server
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_AUTH_DB: ${POSTGRES_AUTH_DB}
  #     FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  location-service:
    build:
      context: ./services/location/server
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_LOCATION_DB: ${POSTGRES_LOCATION_DB}
      FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
    restart: unless-stopped
    networks:
      - app-net

  # alert-service:
  #   build:
  #     context: ./services/alert/server
  #   ports:
  #     - "8084:8084"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_ALERT_DB: ${POSTGRES_ALERT_DB}
  #     FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # diary-service:
  #   build:
  #     context: ./services/diary/server
  #   ports:
  #     - "8085:8085"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_DIARY_DB: ${POSTGRES_DIARY_DB}
  #     FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # asst-service:
  #   build:
  #     context: ./services/assistant/server
  #   ports:
  #     - "8086:8086"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_ASSISTANT_DB: ${POSTGRES_ASSISTANT_DB}
  #     FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # analytic-service:
  #   build:
  #     context: ./services/analyze/server
  #   ports:
  #     - "8088:8088"
  #   depends_on:
  #     - postgres
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     POSTGRES_ANALYTIC_DB: ${POSTGRES_ANALYTIC_DB}
  #     FIREBASE_CREDENTIAL: ${FIREBASE_CREDENTIAL}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # diary-ai-service:
  #   build:
  #     context: ./services/diary-ai
  #   ports:
  #     - "${AI_PORT:-8095}:${AI_PORT:-8095}"
  #   environment:
  #     GOOGLE_API_KEY: ${GOOGLE_API_KEY}
  #     LOG_LEVEL: ${LOG_LEVEL:-INFO}
  #     HOST: ${AI_HOST:-0.0.0.0}
  #     PORT: ${AI_PORT:-8095}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # asst-ai-service:
  #   build:
  #     context: ./services/assistant-ai
  #   ports:
  #     - "${ASST_AI_PORT:-8096}:${ASST_AI_PORT:-8096}"
  #   environment:
  #     GOOGLE_API_KEY: ${GOOGLE_API_KEY}
  #     LOG_LEVEL: ${LOG_LEVEL:-INFO}
  #     HOST: ${AI_HOST:-0.0.0.0}
  #     PORT: ${ASST_AI_PORT:-8096}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # analytic-ai-service:
  #   build:
  #     context: ./services/analyze-ai
  #   ports:
  #     - "${ANALYTIC_AI_PORT:-8098}:${ANALYTIC_AI_PORT:-8098}"
  #   environment:
  #     GOOGLE_API_KEY: ${GOOGLE_API_KEY}
  #     LOG_LEVEL: ${LOG_LEVEL:-INFO}
  #     HOST: ${AI_HOST:-0.0.0.0}
  #     PORT: ${ANALYTIC_AI_PORT:-8098}
  #   restart: unless-stopped
  #   networks:
  #     - app-net

  # admin-web-service:
  #   build:
  #     context: ./clients/admin-web
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - alert-service
  #   restart: unless-stopped
  #   networks:
  #     - app-net

volumes:
  pgdata:

networks:
  app-net:
    driver: bridge
